======================================== setp : 5 (Controller Component : UI add/remove ingredient )=======================================================
#use control component for UI add/remove ingredient by click the button . 

#


#file structure: newly add 
-----------------
/src
    /Components
        /BurgerBuilder
            /Controls/Controls.jsx

#import in <BurgerBuilder/> component . 

#Control.jsx => 
-----------------
import React from "react";


const controls = [
    {label: "Meat", type: "meat"},
    {label: "Cheese", type: "cheese"},
    {label: "Salad", type: "salad"},
]

const BuildControl = (props) => {
    return (
        <div className="d-flex justify-content-between">
            <div className="font-weight-bold fs-5">{props.label}</div>
            <div>
            <button className="btn btn-danger m-2 btn-sm">Less</button>
            <button className="btn btn-success m-2 btn-sm">More</button>
            </div>
        </div>
    )
    
}

const Controls = () => {
  return (
    <div className="container ms-md-5"
        style={{
            marginTop: "20px",
            marginBottom: "20px",
            textAlign: "center"
        }}
    >
      <div class="card shadow">
        <div class="card-header">Add Ingredients</div>
        <div class="card-body">

            {
                controls.map((item) => {

                    return (<BuildControl 
                        key={item.label}
                        label={item.label}
                        type={item.type} />)
                })
            }
          
        </div>
        <div class="card-footer">Price: BDT</div>
      </div>
    </div>
  );
};

export default Controls;

#Burger.jsx=> 
--------------
import React from "react";
import Ingredient from "../Ingredient/Ingredient";

const Burger = (props) => {
  console.log(props);

  let ingredinetArr = props.ingredients.map((item) => {

    // create the ingreate according to the item.amount , this amount get from BurgerBuilder state.

    //explain Array()  => ...Array(5).keys() => [0,1,2,3,4] //Array(create a array of length 5).keys() => [0,1,2,3,4]

    //if item= 1 ; then amountArr = [0] , if item = 2 ; then amountArr = [0,1] ...

    let amountArr = [...Array(item.amount).keys()];

    //check in the console ;
    // console.log(amountArr); 

    // return the item.type to the <Ingredient /> , from the BurgerBuilder state. 
    return amountArr.map((_,) => {

        return <Ingredient type={item.type} key={Math.random()} />
        
    })
  })
    //why use reducer here : if ingredientArr lenth is 0 , then show "please add some ingredients" in the UI.
    //find out the array lenth that why use this reducer. 

    .reduce((value, increment) => {return value.concat(increment)}, []);

    if(ingredinetArr.length === 0){
        ingredinetArr = <p>please add some ingredients</p>
    }

  return (
    <div className="container  ">
      <Ingredient type="bread-top" />
      {ingredinetArr}
      <Ingredient type="bread-bottom" />
    </div>
  );
};

export default Burger;


#BurgerBuilder.jsx=> 
----------------------
import React from 'react'
import Burger from './Burger/Burger'
import Controls from './Controls/Controls'


class BurgerBuilder extends React.Component {
  
    state  = {
        ingredients :
            [
               
                {type : 'salad',amount:1},
                {type : 'cheese',amount:1},
                {type : 'meat',amount:2},
               
            ]
    }
  render() {

    return (
      <div className="d-flex flex-md-row flex-column">
        
        <Burger ingredients={this.state.ingredients}/>
        <Controls />
      </div>
    )
  }
}

export default BurgerBuilder

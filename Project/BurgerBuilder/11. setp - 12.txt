============================================================================== Step : 12 (Checkout Setup with FireBase) ===================================================================
From Checkout Component save order data to the Firebase . 

#Firebase => 
--------------
1. goto => console.firebase.google.com => Add Project => Set Project Name => Continue => Create Project . 
2. Menu => Click the 'Real Time Database' => create DataBae => 
        => test mode (test mode : access from any server) [select this]
        => lock mode (can access from any server )
        
3. Menu => Realtime DataBase => Rules => change => for life time access
    ----------------------------------
    {
      "rules": {
        ".read": "now < 1743530400000",  // 2025-4-2
        ".write": "now < 1743530400000",  // 2025-4-2
      }
    }

    #change the rule : => 
    ----------------------
    {
      "rules": {
        ".read": "true",  // 2025-4-2
        ".write": "true",  // 2025-4-2
      }
    }
    
    => After change the rules Then Click Publish.  

4. Menu => Realtime DataBase => Data =>
-----------------------------------------
we will get a link . => https://bbuilder-7276c-default-rtdb.firebaseio.com/
#after end of the url/(add our data)

=========================================================================================
For order save to Firebase use redux in Checkout component and process full order. 

# use redux into <Checkout > 
# import connect , use mapStateToProps and fetch the redux state. 
# when submit form , then pass those value to the Firebase DB. 

# install axios and import axios
# when click place order btn from checkout component , then axios pass those form 'order' value to the FireBase DB. 
     => and the like will be => https://bbuilder-7276c-default-rtdb.firebaseio.com/
     => after form submit , we ready $order = {all order data}
     => rules to pass in url for firebase => axios.post("url/name_we_want_to_save_into_DB.json",order)
     => firebase save the order with unique key . 
     => for check the order => Firebase console dashboard=> real time DB => order 
     
#<Checkout.jsx> : 
-------------------
import { Button } from "reactstrap";
import React from "react";
import { connect } from "react-redux";
import Ingredient from "../../Ingredient/Ingredient";

import { NavLink } from "react-router-dom";
import axios from "axios";


const mapStateToProps = (state) => {
  console.log(state); 
  return {
    ingredients: state.ingredients,
    totalPrice: state.totalPrice,
    purchaseable: state.purchaseable,
  };
}

class Checkout extends React.Component {
  state = {
    values: {
      deliveryAddress: "",
      phone: "",
      paymentType: "Cash On Delivery ",
    },
  };



  inputChangerHandler = (e) => {
    // Correctly update the state using setState
    this.setState({
      values: {
        ...this.state.values,
        [e.target.name]: e.target.value,
      },
    });
  };

  submitHandler = () => {

   const order = {
      ingredients: this.props.ingredients,
      totalPrice:this.props.totalPrice,
      paymentType:this.state.values.paymentType,
      phone:this.state.values.phone,
      deliveryAddress: this.state.values.deliveryAddress,
      orderTime: new Date().toLocaleString()
    }

    axios.post("https://bbuilder-7276c-default-rtdb.firebaseio.com/orders.json",order)
    .then(response => {
      console.log(response);
    })
    .catch(error => {
      console.log(error);
    })

    console.log(order);
  };

  render() {
    return (
      <div>
       <h4>Price : {this.props.totalPrice}</h4>
        <form>
          <textarea
            name="deliveryAddress"
            value={this.state.values.deliveryAddress}
            className="form-control"
            placeholder="Delivery Address"
            onChange={(e) => this.inputChangerHandler(e)}
          ></textarea>
          <br />
          <input
            name="phone"
            value={this.state.values.phone} // Fixed: Use this.state.values.phone
            className="form-control"
            placeholder="Phone"
            onChange={(e) => this.inputChangerHandler(e)}
          />
          <br />
          <select
            name="paymentType"
            value={this.state.values.paymentType}
            className="form-control"
            onChange={(e) => this.inputChangerHandler(e)} // Added onChange for select
          >
            <option value="Cash On Delivery ">Cash On Delivery</option>
            <option value="Bkash">Bkash</option>
          </select>
          <br />
          <Button className="bg-info m-2" onClick={this.submitHandler}>
            Place Order
          </Button>

          <NavLink to="/"><Button className="bg-info m-2">Cancel</Button></NavLink>
         
        </form>
      </div>
    );
  }
}

export default connect(mapStateToProps) (Checkout);


================================================================= Other Component will be unchanged ====================================================

┌─────────────────────────────────────────────────────────────────────────────────┐
│                    ENHANCED PAGINATION COMPONENT WORKFLOW                      │
│              First | Previous | 1 2 3 4 5 | Next | Last                       │
└─────────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────────┐
│                              INITIAL STATE                                     │
└─────────────────────────────────────────────────────────────────────────────────┘

App.jsx State:
┌─────────────────────────────────────────────────────────────────────────────────┐
│  post: [100 posts from API],                                                   │
│  currentPage: 1,                                                               │
│  postPerPage: 10,                                                              │
│  loading: false,                                                               │
│  error: null                                                                   │
└─────────────────────────────────────────────────────────────────────────────────┘

Calculated Values:
┌─────────────────────────────────────────────────────────────────────────────────┐
│  totalPages = Math.ceil(100 / 10) = 10 pages                                  │
│  indexOfLastPost = 1 * 10 = 10                                                │
│  indexOfFirstPost = 10 - 10 = 0                                               │
│  currentPost = post.slice(0, 10) = [posts 1-10]                               │
└─────────────────────────────────────────────────────────────────────────────────┘

═════════════════════════════════════════════════════════════════════════════════

┌─────────────────────────────────────────────────────────────────────────────────┐
│                       PAGINATION COMPONENT LOGIC                               │
└─────────────────────────────────────────────────────────────────────────────────┘

Props Received:
┌─────────────────────────────────────────────────────────────────────────────────┐
│  postPerPage: 10                                                               │
│  totalPosts: 100                                                               │
│  paginate: function                                                            │
│  currentPage: 1                                                                │
└─────────────────────────────────────────────────────────────────────────────────┘

Internal Calculations:
┌─────────────────────────────────────────────────────────────────────────────────┐
│  const totalPages = Math.ceil(totalPosts / postPerPage);                       │
│  // totalPages = Math.ceil(100 / 10) = 10                                      │
│                                                                                 │
│  // KEY LOGIC: Show 5 pages dynamically around current page                   │
│  const startPage = Math.max(1, currentPage - 2);                              │
│  const endPage = Math.min(totalPages, currentPage + 2);                       │
│                                                                                 │
│  // With currentPage = 1:                                                      │
│  // startPage = Math.max(1, 1 - 2) = Math.max(1, -1) = 1                     │
│  // endPage = Math.min(10, 1 + 2) = Math.min(10, 3) = 3                      │
│                                                                                 │
│  for (let i = startPage; i <= endPage; i++) {                                 │
│    pageNumbers.push(i);  // [1, 2, 3]                                         │
│  }                                                                             │
└─────────────────────────────────────────────────────────────────────────────────┘

═════════════════════════════════════════════════════════════════════════════════

┌─────────────────────────────────────────────────────────────────────────────────┐
│                          INITIAL UI RENDERING                                  │
└─────────────────────────────────────────────────────────────────────────────────┘

Current State: currentPage = 1, totalPages = 10

Button States:
┌─────────────────────────────────────────────────────────────────────────────────┐
│  First Button:    disabled (currentPage === 1)                                │
│  Previous Button: disabled (currentPage === 1)                                │
│  Next Button:     enabled (currentPage < totalPages)                          │
│  Last Button:     enabled (currentPage < totalPages)                          │
└─────────────────────────────────────────────────────────────────────────────────┘

Page Numbers Displayed: [1, 2, 3]
┌─────────────────────────────────────────────────────────────────────────────────┐
│  Page 1: active (currentPage === 1)                                           │
│  Page 2: inactive                                                              │
│  Page 3: inactive                                                              │
└─────────────────────────────────────────────────────────────────────────────────┘

UI Output:
┌───────────────────────────────────────────────────────┐
│ [First]ᵈⁱˢᵃᵇˡᵉᵈ [Previous]ᵈⁱˢᵃᵇˡᵉᵈ [1]ᵃᶜᵗⁱᵛᵉ [2] [3] [Next] [Last] │
└───────────────────────────────────────────────────────┘

═════════════════════════════════════════════════════════════════════════════════

┌─────────────────────────────────────────────────────────────────────────────────┐
│                        STEP 1: USER CLICKS NEXT                                │
└─────────────────────────────────────────────────────────────────────────────────┘

User Action: Clicks "Next" button

Event Flow:
┌─────────────────────────────────────────────────────────────────────────────────┐
│  1. onClick={() => paginate(currentPage + 1)} triggered                        │
│  2. paginate(1 + 1) = paginate(2) called                                      │
│  3. App.jsx: setCurrentPage(2)                                                │
│  4. Component re-renders with new currentPage = 2                             │
└─────────────────────────────────────────────────────────────────────────────────┘

New Calculations in App.jsx:
┌─────────────────────────────────────────────────────────────────────────────────┐
│  indexOfLastPost = 2 * 10 = 20                                                │
│  indexOfFirstPost = 20 - 10 = 10                                              │
│  currentPost = post.slice(10, 20) = [posts 11-20]                             │
└─────────────────────────────────────────────────────────────────────────────────┘

New Pagination Calculations:
┌─────────────────────────────────────────────────────────────────────────────────┐
│  currentPage = 2                                                              │
│  startPage = Math.max(1, 2 - 2) = Math.max(1, 0) = 1                         │
│  endPage = Math.min(10, 2 + 2) = Math.min(10, 4) = 4                         │
│  pageNumbers = [1, 2, 3, 4]                                                   │
└─────────────────────────────────────────────────────────────────────────────────┘

Updated UI:
┌───────────────────────────────────────────────────────────┐
│ [First] [Previous] [1] [2]ᵃᶜᵗⁱᵛᵉ [3] [4] [Next] [Last] │
└───────────────────────────────────────────────────────────┘

═════════════════════════════════════════════════════════════════════════════════

┌─────────────────────────────────────────────────────────────────────────────────┐
│                    STEP 2: USER CLICKS PAGE 4                                  │
└─────────────────────────────────────────────────────────────────────────────────┘

User Action: Clicks page number "4"

Event Flow:
┌─────────────────────────────────────────────────────────────────────────────────┐
│  1. onClick={() => paginate(4)} triggered                                     │
│  2. paginate(4) called                                                        │
│  3. App.jsx: setCurrentPage(4)                                                │
│  4. Component re-renders with new currentPage = 4                             │
└─────────────────────────────────────────────────────────────────────────────────┘

New Calculations in App.jsx:
┌─────────────────────────────────────────────────────────────────────────────────┐
│  indexOfLastPost = 4 * 10 = 40                                                │
│  indexOfFirstPost = 40 - 10 = 30                                              │
│  currentPost = post.slice(30, 40) = [posts 31-40]                             │
└─────────────────────────────────────────────────────────────────────────────────┘

New Pagination Calculations:
┌─────────────────────────────────────────────────────────────────────────────────┐
│  currentPage = 4                                                              │
│  startPage = Math.max(1, 4 - 2) = Math.max(1, 2) = 2                         │
│  endPage = Math.min(10, 4 + 2) = Math.min(10, 6) = 6                         │
│  pageNumbers = [2, 3, 4, 5, 6]  ← Window shifted!                             │
└─────────────────────────────────────────────────────────────────────────────────┘

Updated UI:
┌─────────────────────────────────────────────────────────────┐
│ [First] [Previous] [2] [3] [4]ᵃᶜᵗⁱᵛᵉ [5] [6] [Next] [Last] │
└─────────────────────────────────────────────────────────────┘

═════════════════════════════════════════════════════════════════════════════════

┌─────────────────────────────────────────────────────────────────────────────────┐
│                       STEP 3: USER CLICKS LAST                                 │
└─────────────────────────────────────────────────────────────────────────────────┘

User Action: Clicks "Last" button

Event Flow:
┌─────────────────────────────────────────────────────────────────────────────────┐
│  1. onClick={() => paginate(totalPages)} triggered                            │
│  2. paginate(10) called                                                       │
│  3. App.jsx: setCurrentPage(10)                                               │
│  4. Component re-renders with new currentPage = 10                            │
└─────────────────────────────────────────────────────────────────────────────────┘

New Calculations in App.jsx:
┌─────────────────────────────────────────────────────────────────────────────────┐
│  indexOfLastPost = 10 * 10 = 100                                              │
│  indexOfFirstPost = 100 - 10 = 90                                             │
│  currentPost = post.slice(90, 100) = [posts 91-100]                           │
└─────────────────────────────────────────────────────────────────────────────────┘

New Pagination Calculations:
┌─────────────────────────────────────────────────────────────────────────────────┐
│  currentPage = 10                                                             │
│  startPage = Math.max(1, 10 - 2) = Math.max(1, 8) = 8                        │
│  endPage = Math.min(10, 10 + 2) = Math.min(10, 12) = 10                      │
│  pageNumbers = [8, 9, 10]  ← Window at end!                                   │
└─────────────────────────────────────────────────────────────────────────────────┘

Button States:
┌─────────────────────────────────────────────────────────────────────────────────┐
│  First Button:    enabled (currentPage > 1)                                   │
│  Previous Button: enabled (currentPage > 1)                                   │
│  Next Button:     disabled (currentPage === totalPages)                       │
│  Last Button:     disabled (currentPage === totalPages)                       │
└─────────────────────────────────────────────────────────────────────────────────┘

Updated UI:
┌─────────────────────────────────────────────────────────────────────────────────┐
│ [First] [Previous] [8] [9] [10]ᵃᶜᵗⁱᵛᵉ [Next]ᵈⁱˢᵃᵇˡᵉᵈ [Last]ᵈⁱˢᵃᵇˡᵉᵈ │
└─────────────────────────────────────────────────────────────────────────────────┘

═════════════════════════════════════════════════════════════════════════════════

┌─────────────────────────────────────────────────────────────────────────────────┐
│                      STEP 4: USER CLICKS FIRST                                 │
└─────────────────────────────────────────────────────────────────────────────────┘

User Action: Clicks "First" button

Event Flow:
┌─────────────────────────────────────────────────────────────────────────────────┐
│  1. onClick={() => paginate(1)} triggered                                     │
│  2. paginate(1) called                                                        │
│  3. App.jsx: setCurrentPage(1)                                                │
│  4. Component re-renders with new currentPage = 1                             │
└─────────────────────────────────────────────────────────────────────────────────┘

Back to Initial State:
┌─────────────────────────────────────────────────────────────────────────────────┐
│  currentPage = 1                                                              │
│  startPage = Math.max(1, 1 - 2) = 1                                           │
│  endPage = Math.min(10, 1 + 2) = 3                                            │
│  pageNumbers = [1, 2, 3]                                                      │
└─────────────────────────────────────────────────────────────────────────────────┘

Updated UI:
┌───────────────────────────────────────────────────────────┐
│ [First]ᵈⁱˢᵃᵇˡᵉᵈ [Previous]ᵈⁱˢᵃᵇˡᵉᵈ [1]ᵃᶜᵗⁱᵛᵉ [2] [3] [Next] [Last] │
└───────────────────────────────────────────────────────────┘

═════════════════════════════════════════════════════════════════════════════════

┌─────────────────────────────────────────────────────────────────────────────────┐
│                        DIFFERENT SCENARIOS                                     │
└─────────────────────────────────────────────────────────────────────────────────┘

Scenario 1: currentPage = 5 (Middle page)
┌─────────────────────────────────────────────────────────────────────────────────┐
│  startPage = Math.max(1, 5 - 2) = 3                                           │
│  endPage = Math.min(10, 5 + 2) = 7                                            │
│  pageNumbers = [3, 4, 5, 6, 7]                                                │
│  UI: [First] [Previous] [3] [4] [5]ᵃᶜᵗⁱᵛᵉ [6] [7] [Next] [Last]                │
└─────────────────────────────────────────────────────────────────────────────────┘

Scenario 2: currentPage = 2 (Near beginning)
┌─────────────────────────────────────────────────────────────────────────────────┐
│  startPage = Math.max(1, 2 - 2) = 1                                           │
│  endPage = Math.min(10, 2 + 2) = 4                                            │
│  pageNumbers = [1, 2, 3, 4]                                                   │
│  UI: [First] [Previous] [1] [2]ᵃᶜᵗⁱᵛᵉ [3] [4] [Next] [Last]                   │
└─────────────────────────────────────────────────────────────────────────────────┘

Scenario 3: currentPage = 9 (Near end)
┌─────────────────────────────────────────────────────────────────────────────────┐
│  startPage = Math.max(1, 9 - 2) = 7                                           │
│  endPage = Math.min(10, 9 + 2) = 10                                           │
│  pageNumbers = [7, 8, 9, 10]                                                  │
│  UI: [First] [Previous] [7] [8] [9]ᵃᶜᵗⁱᵛᵉ [10] [Next] [Last]                  │
└─────────────────────────────────────────────────────────────────────────────────┘

═════════════════════════════════════════════════════════════════════════════════

┌─────────────────────────────────────────────────────────────────────────────────┐
│                           COMPLETE DATA FLOW                                   │
└─────────────────────────────────────────────────────────────────────────────────┘

1. User Interaction (Button Click)
   │
   ▼
2. paginate(pageNumber) Function Called
   │
   ▼
3. App.jsx State Update
   ┌─────────────────────────────────────────┐
   │  setCurrentPage(pageNumber)             │
   │  ↓                                      │
   │  React re-renders App component         │
   └─────────────────────────────────────────┘
   │
   ▼
4. App.jsx Recalculates
   ┌─────────────────────────────────────────┐
   │  indexOfLastPost = currentPage *        │
   │    postPerPage                          │
   │  indexOfFirstPost = indexOfLastPost -   │
   │    postPerPage                          │
   │  currentPost = post.slice(              │
   │    indexOfFirstPost, indexOfLastPost)   │
   └─────────────────────────────────────────┘
   │
   ▼
5. Pagination Component Re-renders
   ┌─────────────────────────────────────────┐
   │  New currentPage prop received          │
   │  ↓                                      │
   │  Recalculate startPage & endPage        │
   │  ↓                                      │
   │  Generate new pageNumbers array         │
   │  ↓                                      │
   │  Update button disabled states          │
   │  ↓                                      │
   │  Render new pagination UI               │
   └─────────────────────────────────────────┘
   │
   ▼
6. UI Updates
   ┌─────────────────────────────────────────┐
   │  New posts displayed                    │
   │  Updated pagination buttons             │
   │  Correct active/disabled states         │
   └─────────────────────────────────────────┘

═════════════════════════════════════════════════════════════════════════════════

┌─────────────────────────────────────────────────────────────────────────────────┐
│                              KEY FEATURES                                      │
└─────────────────────────────────────────────────────────────────────────────────┘

🔹 Dynamic 5-Page Window: Always shows up to 5 page numbers around current page
🔹 Smart Boundary Handling: Adjusts when near beginning or end
🔹 Navigation Buttons: First, Previous, Next, Last with proper disabled states
🔹 Accessibility: Uses button elements with proper ARIA states
🔹 Responsive Logic: Automatically adapts to total page count
🔹 State Synchronization: App and Pagination components stay in sync

┌─────────────────────────────────────────────────────────────────────────────────┐
│                            BOUNDARY CONDITIONS                                 │
└─────────────────────────────────────────────────────────────────────────────────┘

• Total Pages ≤ 5: Shows all pages [1, 2, 3, 4, 5]
• Current Page ≤ 3: Window starts at 1 [1, 2, 3, 4, 5]
• Current Page ≥ (totalPages - 2): Window ends at totalPages
• Invalid Page Numbers: paginate() function validates range
